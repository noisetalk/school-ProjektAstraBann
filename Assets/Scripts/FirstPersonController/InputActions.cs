//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/FirstPersonController/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""ec1e3290-b586-49f2-92f9-404ef376c1a5"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""1b21db3c-90bd-4e33-978a-981a2726a2a6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""433a5100-8c7a-4f0e-9024-e350f2c75447"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""dc33e523-a3f6-4619-8a00-ae1b6c66a9d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""ca798892-e5d0-48eb-9edb-6dc6d6d331a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cast"",
                    ""type"": ""Button"",
                    ""id"": ""c7befd1a-94af-44ca-bf10-6a0a591cef96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Link"",
                    ""type"": ""Button"",
                    ""id"": ""c28b1ac4-63a4-4437-b54f-1936876e7a2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Push"",
                    ""type"": ""Button"",
                    ""id"": ""371afd95-183b-48e7-b5b8-3503a97efd5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pull"",
                    ""type"": ""Button"",
                    ""id"": ""08f081f2-18c7-42ad-b2da-1f9982e47ef3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateY"",
                    ""type"": ""Button"",
                    ""id"": ""80c8b4d3-42f3-45b1-a0a1-865db345f3a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateZ"",
                    ""type"": ""Button"",
                    ""id"": ""1165ad0a-7438-45be-bc88-5b74ae26522e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enlarge"",
                    ""type"": ""Button"",
                    ""id"": ""f033cfd6-ad26-4159-8904-fdb18fa45225"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shrink"",
                    ""type"": ""Button"",
                    ""id"": ""062a00b4-da4b-482f-ae28-046d49b13ebb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""fa532a78-2c27-45a6-b8b4-9542c79dd289"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""18ec2c66-cc9f-4555-bc82-1b0c52f614ed"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""160f07de-ac79-4232-a342-34ed1309c16f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""356e81b2-d3cc-4a0c-a72b-9ef7c643d531"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""64a03feb-8ecd-43e5-8879-dc21a19ce29b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""58ff78ab-07cc-4d7a-8843-885416062513"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9facbe2-29ae-4b0f-b512-cc0f9f64d9d7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa258b54-c998-4d1e-89aa-1557ce1c47c0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1480933f-4c57-478c-8160-6962c1e11856"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eca5425b-9dbe-4cb3-bd57-a0619fe83ff3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df942d5f-2055-45b0-b4ff-69a3bb2d8de1"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d94db947-45a8-40a9-ab0c-a2e2564d015f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""110f7cd9-72f6-446b-af5c-ab0aaa52a604"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Link"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42be5c6c-c5ec-426a-a146-f5bff5542118"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Link"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""befaf076-0002-49ce-a471-4b112f936afe"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bc631fe-acfd-437e-84c0-e90a483d9b64"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f6e1121-62c9-460c-929a-e9d62d7600db"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b6eef4a-7f59-4924-a525-6db33a9fe556"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bfa83cf-3770-465b-92f7-da84c6433f69"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed632b74-3500-45f5-9684-2fdb5b8b9456"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""429e5058-a1f5-4479-91c5-4a7b9e9107d8"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateZ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c25e2d54-0534-4077-8d3a-b5271a28fd0d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateZ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""300bab07-8345-477e-a69e-9df9558f7bd6"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59e6e5cb-0595-42d5-8776-1beaa6240ae3"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae4ea831-b41e-49a4-bd28-87132e8ed904"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enlarge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff0769ab-713e-410e-9ba0-f37f0e85c783"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enlarge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48c5af30-05a9-4f72-9bb3-73f5450f84c4"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shrink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0658504f-ab2c-4189-9d37-2b0bdc0966c7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shrink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Misc"",
            ""id"": ""b71d8e80-eff7-4753-ac37-d9e190214292"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""9d717e15-31d3-462c-b2ef-6ad4a2b33da1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugTimeToggle"",
                    ""type"": ""Button"",
                    ""id"": ""76a2ac83-e525-40ce-b025-78538493b442"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugTimeSlow"",
                    ""type"": ""Button"",
                    ""id"": ""6ea2cbe0-3eb5-4167-a0c2-ea47255fc593"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugTimeFast"",
                    ""type"": ""Button"",
                    ""id"": ""a5892664-9646-422d-b8aa-d7242ebdab48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9ce3dce8-bb0e-467d-9e7d-7425d57c63a1"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugTimeToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f8fe38b-c7d6-4cc6-bbe6-60a8d1b135e9"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a09591bd-b162-443c-bb05-bbc3311717a6"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugTimeFast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31b8f9bf-05ad-4d7f-8874-3939cd7a3338"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugTimeSlow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Use = m_Player.FindAction("Use", throwIfNotFound: true);
        m_Player_Cast = m_Player.FindAction("Cast", throwIfNotFound: true);
        m_Player_Link = m_Player.FindAction("Link", throwIfNotFound: true);
        m_Player_Push = m_Player.FindAction("Push", throwIfNotFound: true);
        m_Player_Pull = m_Player.FindAction("Pull", throwIfNotFound: true);
        m_Player_RotateY = m_Player.FindAction("RotateY", throwIfNotFound: true);
        m_Player_RotateZ = m_Player.FindAction("RotateZ", throwIfNotFound: true);
        m_Player_Enlarge = m_Player.FindAction("Enlarge", throwIfNotFound: true);
        m_Player_Shrink = m_Player.FindAction("Shrink", throwIfNotFound: true);
        // Misc
        m_Misc = asset.FindActionMap("Misc", throwIfNotFound: true);
        m_Misc_Pause = m_Misc.FindAction("Pause", throwIfNotFound: true);
        m_Misc_DebugTimeToggle = m_Misc.FindAction("DebugTimeToggle", throwIfNotFound: true);
        m_Misc_DebugTimeSlow = m_Misc.FindAction("DebugTimeSlow", throwIfNotFound: true);
        m_Misc_DebugTimeFast = m_Misc.FindAction("DebugTimeFast", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Use;
    private readonly InputAction m_Player_Cast;
    private readonly InputAction m_Player_Link;
    private readonly InputAction m_Player_Push;
    private readonly InputAction m_Player_Pull;
    private readonly InputAction m_Player_RotateY;
    private readonly InputAction m_Player_RotateZ;
    private readonly InputAction m_Player_Enlarge;
    private readonly InputAction m_Player_Shrink;
    public struct PlayerActions
    {
        private @InputActions m_Wrapper;
        public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Use => m_Wrapper.m_Player_Use;
        public InputAction @Cast => m_Wrapper.m_Player_Cast;
        public InputAction @Link => m_Wrapper.m_Player_Link;
        public InputAction @Push => m_Wrapper.m_Player_Push;
        public InputAction @Pull => m_Wrapper.m_Player_Pull;
        public InputAction @RotateY => m_Wrapper.m_Player_RotateY;
        public InputAction @RotateZ => m_Wrapper.m_Player_RotateZ;
        public InputAction @Enlarge => m_Wrapper.m_Player_Enlarge;
        public InputAction @Shrink => m_Wrapper.m_Player_Shrink;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Use.started += instance.OnUse;
            @Use.performed += instance.OnUse;
            @Use.canceled += instance.OnUse;
            @Cast.started += instance.OnCast;
            @Cast.performed += instance.OnCast;
            @Cast.canceled += instance.OnCast;
            @Link.started += instance.OnLink;
            @Link.performed += instance.OnLink;
            @Link.canceled += instance.OnLink;
            @Push.started += instance.OnPush;
            @Push.performed += instance.OnPush;
            @Push.canceled += instance.OnPush;
            @Pull.started += instance.OnPull;
            @Pull.performed += instance.OnPull;
            @Pull.canceled += instance.OnPull;
            @RotateY.started += instance.OnRotateY;
            @RotateY.performed += instance.OnRotateY;
            @RotateY.canceled += instance.OnRotateY;
            @RotateZ.started += instance.OnRotateZ;
            @RotateZ.performed += instance.OnRotateZ;
            @RotateZ.canceled += instance.OnRotateZ;
            @Enlarge.started += instance.OnEnlarge;
            @Enlarge.performed += instance.OnEnlarge;
            @Enlarge.canceled += instance.OnEnlarge;
            @Shrink.started += instance.OnShrink;
            @Shrink.performed += instance.OnShrink;
            @Shrink.canceled += instance.OnShrink;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Use.started -= instance.OnUse;
            @Use.performed -= instance.OnUse;
            @Use.canceled -= instance.OnUse;
            @Cast.started -= instance.OnCast;
            @Cast.performed -= instance.OnCast;
            @Cast.canceled -= instance.OnCast;
            @Link.started -= instance.OnLink;
            @Link.performed -= instance.OnLink;
            @Link.canceled -= instance.OnLink;
            @Push.started -= instance.OnPush;
            @Push.performed -= instance.OnPush;
            @Push.canceled -= instance.OnPush;
            @Pull.started -= instance.OnPull;
            @Pull.performed -= instance.OnPull;
            @Pull.canceled -= instance.OnPull;
            @RotateY.started -= instance.OnRotateY;
            @RotateY.performed -= instance.OnRotateY;
            @RotateY.canceled -= instance.OnRotateY;
            @RotateZ.started -= instance.OnRotateZ;
            @RotateZ.performed -= instance.OnRotateZ;
            @RotateZ.canceled -= instance.OnRotateZ;
            @Enlarge.started -= instance.OnEnlarge;
            @Enlarge.performed -= instance.OnEnlarge;
            @Enlarge.canceled -= instance.OnEnlarge;
            @Shrink.started -= instance.OnShrink;
            @Shrink.performed -= instance.OnShrink;
            @Shrink.canceled -= instance.OnShrink;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Misc
    private readonly InputActionMap m_Misc;
    private List<IMiscActions> m_MiscActionsCallbackInterfaces = new List<IMiscActions>();
    private readonly InputAction m_Misc_Pause;
    private readonly InputAction m_Misc_DebugTimeToggle;
    private readonly InputAction m_Misc_DebugTimeSlow;
    private readonly InputAction m_Misc_DebugTimeFast;
    public struct MiscActions
    {
        private @InputActions m_Wrapper;
        public MiscActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_Misc_Pause;
        public InputAction @DebugTimeToggle => m_Wrapper.m_Misc_DebugTimeToggle;
        public InputAction @DebugTimeSlow => m_Wrapper.m_Misc_DebugTimeSlow;
        public InputAction @DebugTimeFast => m_Wrapper.m_Misc_DebugTimeFast;
        public InputActionMap Get() { return m_Wrapper.m_Misc; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MiscActions set) { return set.Get(); }
        public void AddCallbacks(IMiscActions instance)
        {
            if (instance == null || m_Wrapper.m_MiscActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MiscActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @DebugTimeToggle.started += instance.OnDebugTimeToggle;
            @DebugTimeToggle.performed += instance.OnDebugTimeToggle;
            @DebugTimeToggle.canceled += instance.OnDebugTimeToggle;
            @DebugTimeSlow.started += instance.OnDebugTimeSlow;
            @DebugTimeSlow.performed += instance.OnDebugTimeSlow;
            @DebugTimeSlow.canceled += instance.OnDebugTimeSlow;
            @DebugTimeFast.started += instance.OnDebugTimeFast;
            @DebugTimeFast.performed += instance.OnDebugTimeFast;
            @DebugTimeFast.canceled += instance.OnDebugTimeFast;
        }

        private void UnregisterCallbacks(IMiscActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @DebugTimeToggle.started -= instance.OnDebugTimeToggle;
            @DebugTimeToggle.performed -= instance.OnDebugTimeToggle;
            @DebugTimeToggle.canceled -= instance.OnDebugTimeToggle;
            @DebugTimeSlow.started -= instance.OnDebugTimeSlow;
            @DebugTimeSlow.performed -= instance.OnDebugTimeSlow;
            @DebugTimeSlow.canceled -= instance.OnDebugTimeSlow;
            @DebugTimeFast.started -= instance.OnDebugTimeFast;
            @DebugTimeFast.performed -= instance.OnDebugTimeFast;
            @DebugTimeFast.canceled -= instance.OnDebugTimeFast;
        }

        public void RemoveCallbacks(IMiscActions instance)
        {
            if (m_Wrapper.m_MiscActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMiscActions instance)
        {
            foreach (var item in m_Wrapper.m_MiscActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MiscActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MiscActions @Misc => new MiscActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnCast(InputAction.CallbackContext context);
        void OnLink(InputAction.CallbackContext context);
        void OnPush(InputAction.CallbackContext context);
        void OnPull(InputAction.CallbackContext context);
        void OnRotateY(InputAction.CallbackContext context);
        void OnRotateZ(InputAction.CallbackContext context);
        void OnEnlarge(InputAction.CallbackContext context);
        void OnShrink(InputAction.CallbackContext context);
    }
    public interface IMiscActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnDebugTimeToggle(InputAction.CallbackContext context);
        void OnDebugTimeSlow(InputAction.CallbackContext context);
        void OnDebugTimeFast(InputAction.CallbackContext context);
    }
}
